{"version":3,"file":"static/js/7.5d4a7643.chunk.js","mappings":"uOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,kCAGlB,IAAMC,EAAY,mCAAG,WAAMC,GAAN,wFACHF,EAAAA,EAAAA,GAAM,uBAAD,OAAwBE,EAAxB,iBADF,cACpBC,EADoB,yBAGnBA,EAASC,KAAKC,QAAQC,QAC3B,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACY,OAAVD,GACU,KAAVA,GACU,mBAAVA,GACa,eAAbC,GACa,eAAbA,GACa,sBAAbA,CANF,KAJwB,2CAAH,sDAcZC,EAAc,mCAAG,qGACLT,EAAAA,EAAAA,GAAM,gDADD,cACtBG,EADsB,yBAGrBA,EAASC,KAAKC,SAHO,2CAAH,oD,gFCjBdK,E,QAAYC,GAAAA,IAAH,sE,SCCTC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,sEChBYC,E,QAAkBV,GAAAA,IAAH,yQ,SCAfW,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,SAACF,EAAD,WACE,uBAAIE,KAGT,C,4MCNYC,EAAgBb,EAAAA,GAAAA,GAAH,sXAoBbc,EAAgBd,EAAAA,GAAAA,GAAH,gtBASf,SAAAe,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAgBY,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,KAAnB,IACZ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,MAAnB,IACI,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,SAAZ,I,SCzCbC,EACG,QADHA,EAEK,UAFLA,EAGG,QAgDT,EA7C6B,WAC3B,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,2FACZN,EAAUL,GADE,mBAGWxB,EAAAA,EAAAA,KAHX,OAGJoC,EAHI,OAIVT,EAAaS,GACbP,EAAUL,GALA,gDAOVK,EAAUL,GACVO,EAAS,KAAMjB,SACfuB,EAAAA,OAAAA,QAAe,KAAMvB,SATX,yDAAH,qDAYXqB,GACD,GAAE,KAGD,2BACGP,IAAWJ,IAAkB,SAACrB,EAAA,EAAD,IAE7ByB,IAAWJ,IACV,SAACT,EAAD,UACGW,EAAUY,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACpB,OACE,SAACxB,EAAD,WACE,SAAC,KAAD,CAAMyB,GAAE,qBAAgBF,GAAMG,MAAO,CAAEC,KAAMX,GAA7C,SACGQ,KAFeD,EAMvB,MAIJX,IAAWJ,IAAgB,SAACX,EAAA,EAAD,CAAcC,QAASgB,MAGxD,C","sources":["api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","pages/VariablesListVehicle/VariablesListVehicle.styled.jsx","pages/VariablesListVehicle/VariablesListVehicle.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://vpic.nhtsa.dot.gov/api/';\n\n// Сразу фильтрует массив от лишней информации\nexport const fetchVinCode = async vin => {\n  const response = await axios(`/vehicles/decodevin/${vin}?format=json`);\n\n  return response.data.Results.filter(\n    ({ Value, Variable }) =>\n      Value !== null &&\n      Value !== '' &&\n      Value !== 'Not Applicable' &&\n      Variable !== 'Error Code' &&\n      Variable !== 'Error Text' &&\n      Variable !== 'Other Engine Info'\n  );\n};\n\nexport const fetchVariables = async () => {\n  const response = await axios(`/vehicles/getvehiclevariablelist?format=json`);\n\n  return response.data.Results;\n};\n","import styled from 'styled-components';\n\nexport const BoxLoader = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { BoxLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <BoxLoader>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"#00c2e0\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </BoxLoader>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoxNotification = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  p {\n    text-transform: uppercase;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 30px;\n    padding-bottom: 30px;\n  }\n`;\n","import { BoxNotification } from './Notification.styled';\n\nexport const Notification = ({ message }) => {\n  return (\n    <BoxNotification>\n      <p>{message}</p>\n    </BoxNotification>\n  );\n};\n","import styled from 'styled-components';\n\nexport const VariablesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 320px) {\n  }\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-left: -30px;\n    margin-top: -30px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 30px);\n  }\n`;\n\nexport const VariablesItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 10px 5px;\n\n  border-radius: 4px;\n\n  color: ${p => p.theme.colors.dark};\n\n  cursor: pointer;\n\n  a {\n    color: unset;\n    text-decoration: none;\n    text-align: center;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  :hover,\n  :focus-visible {\n    background-color: ${p => p.theme.colors.light};\n    color: ${p => p.theme.colors.accent};\n    box-shadow: ${p => p.theme.boxShadow};\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 30px);\n    margin-left: 30px;\n    margin-top: 30px;\n\n    &:not(:last-child) {\n      margin-bottom: unset;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 30px);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { fetchVariables } from 'api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notification } from 'components/Notification/Notification';\nimport { VariablesList, VariablesItem } from './VariablesListVehicle.styled';\n\nconst STATUS = {\n  IDEAL: 'ideal',\n  LOADING: 'loading',\n  ERROR: 'error',\n};\n\nconst VariablesListVehicle = () => {\n  const [variables, setVariables] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDEAL);\n  const [error, setError] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetch = async () => {\n      setStatus(STATUS.LOADING);\n      try {\n        const result = await fetchVariables();\n        setVariables(result);\n        setStatus(STATUS.IDEAL);\n      } catch (error) {\n        setStatus(STATUS.ERROR);\n        setError(error.message);\n        Notify.failure(error.message);\n      }\n    };\n    fetch();\n  }, []);\n\n  return (\n    <div>\n      {status === STATUS.LOADING && <Loader />}\n\n      {status === STATUS.IDEAL && (\n        <VariablesList>\n          {variables.map(({ ID, Name }) => {\n            return (\n              <VariablesItem key={ID}>\n                <Link to={`/variables/${ID}`} state={{ from: location }}>\n                  {Name}\n                </Link>\n              </VariablesItem>\n            );\n          })}\n        </VariablesList>\n      )}\n\n      {status === STATUS.ERROR && <Notification message={error} />}\n    </div>\n  );\n};\n\nexport default VariablesListVehicle;\n"],"names":["axios","fetchVinCode","vin","response","data","Results","filter","Value","Variable","fetchVariables","BoxLoader","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","BoxNotification","Notification","message","VariablesList","VariablesItem","p","theme","colors","dark","light","accent","boxShadow","STATUS","useState","variables","setVariables","status","setStatus","error","setError","location","useLocation","useEffect","fetch","result","Notify","map","ID","Name","to","state","from"],"sourceRoot":""}